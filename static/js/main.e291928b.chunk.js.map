{"version":3,"sources":["recordsStore.js","recordsContext.js","Navbar.js","Collapsible.js","TableItem.js","ListRequests.js","RequestForm.js","NewRequest.js","logos.svg","Drawer.js","Routes.js","index.js"],"names":["createRecordsStore","records","addRecord","model","yil","durum","hull","lokasyon","sahipAd","sahipSoyad","sahipEmail","sahipTel","kaydedenAd","kaydedenSoyad","kaydedenEmail","kaydedenTel","kayitTipi","tarih","detay","ozet","this","push","createData","RecordsContext","createContext","useRecordsStore","useContext","RecordsProvider","children","recordsStore","useLocalObservable","Provider","value","useStyles","makeStyles","appbarSM","width","float","appbarLG","ConditionalTypo","match","useRouteMatch","url","Typography","style","flex","Navbar","isSmall","useMediaQuery","query","classes","Grid","item","xs","AppBar","position","className","Toolbar","IconButton","color","theme","root","minWidth","maxWidth","media","height","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","cardContent","backgroundColor","nested","paddingLeft","spacing","Collapsible","props","React","useState","expanded","setExpanded","Card","CardActions","disableSpacing","clsx","onClick","Collapse","in","timeout","unmountOnExit","List","component","disablePadding","ListItem","button","ListItemIcon","StarBorder","descendingComparator","a","b","orderBy","getComparator","order","stableSort","array","comparator","stabilizedThis","map","el","index","sort","headCells","id","numeric","label","EnhancedTableHead","onRequestSort","TableHead","TableRow","TableCell","padding","headCell","align","sortDirection","TableSortLabel","active","direction","property","event","visuallyHidden","marginTop","paper","marginBottom","table","border","clip","margin","overflow","top","TableItem","setOrder","setOrderBy","page","setPage","dense","setDense","rowsPerPage","setRowsPerPage","handleRequestSort","handleChangePage","newPage","handleChangeRowsPerPage","parseInt","target","handleChangeDense","checked","emptyRows","Math","min","useObserver","Paper","TableContainer","Table","size","rowCount","length","TableBody","slice","record","labelId","scope","colSpan","TablePagination","rowsPerPageOptions","count","onPageChange","onRowsPerPageChange","FormControlLabel","control","Switch","onChange","ListRequests","formControl","display","formGroup","paddingBottom","selector","datePicker","textField","marginRight","RequestForm","setModel","Date","setYil","setDurum","setLokasyon","setHull","setSahipAd","setSahipSoyad","setSahipEmail","setSahipTel","setKaydedenAd","setKaydedenSoyad","setKaydedenEmail","setKaydedenTel","setKayitTipi","setDetay","setOzet","moment","locale","format","onSubmit","e","preventDefault","utils","DateFnsUtils","container","Divider","FormControl","InputLabel","Select","MenuItem","DatePicker","views","TextField","placeholder","name","type","Fab","NewRequest","palette","background","navItem","fontSize","link","textDecoration","Logos","DrawerLargeScreen","src","logos","alt","to","ListItemText","primary","alignItems","DrawerSmallScreen","Drawer","isLargeScreen","Routes","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e291928b.chunk.js","sourcesContent":["function createData(model, yil,durum, hull, lokasyon, sahipAd, sahipSoyad, sahipEmail, sahipTel,\r\n    kaydedenAd, kaydedenSoyad, kaydedenEmail, kaydedenTel, kayitTipi, tarih, detay) {\r\n    return {\r\n        model, yil,durum, hull, lokasyon, sahipAd, sahipSoyad, sahipEmail, sahipTel,\r\n        kaydedenAd, kaydedenSoyad, kaydedenEmail, kaydedenTel, kayitTipi, tarih, detay\r\n    };\r\n}\r\n\r\nexport function createRecordsStore() {\r\n    return {\r\n        records: [],\r\n\r\n        addRecord(model, yil,durum, hull, lokasyon, sahipAd, sahipSoyad, sahipEmail, sahipTel,\r\n            kaydedenAd, kaydedenSoyad, kaydedenEmail, kaydedenTel, kayitTipi, tarih, detay, ozet) {\r\n                this.records.push(createData(model,yil,durum,hull,lokasyon,sahipAd,sahipSoyad,sahipEmail,sahipTel,\r\n                    kaydedenAd,kaydedenSoyad,kaydedenEmail,kaydedenTel,kayitTipi,tarih,detay,ozet))\r\n        },\r\n\r\n    }\r\n}\r\n\r\n","import React, { createContext, useContext } from 'react';\r\nimport { createRecordsStore } from './recordsStore';\r\nimport { useLocalObservable } from 'mobx-react'\r\n\r\nconst RecordsContext = createContext(null);\r\nconst useRecordsStore = () => useContext(RecordsContext)\r\n\r\n\r\nconst RecordsProvider = ({children}) => {\r\n    const recordsStore = useLocalObservable(createRecordsStore);\r\n    return (\r\n        <RecordsContext.Provider  value={recordsStore}>\r\n            {children}\r\n        </RecordsContext.Provider>\r\n    )\r\n}\r\nexport {RecordsProvider, useRecordsStore}","import React from 'react';\r\nimport { Grid, IconButton, Toolbar, Typography, AppBar } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport { useRouteMatch } from 'react-router';\r\nimport { useMediaQuery } from 'react-responsive'\r\n\r\n\r\n\r\nconst useStyles = makeStyles(() => ({\r\n        appbarSM: {\r\n            width: \"70%\",\r\n            float:\"right\",\r\n        },\r\n        appbarLG: {\r\n            width: \"90%\",\r\n            float:\"right\",\r\n        }\r\n}));\r\n\r\n\r\nconst ConditionalTypo = () => {\r\n    const match = useRouteMatch();\r\n\r\n    if (match.url === \"/\"){\r\n        return <Typography style={{flex:1}} >\r\n            Tüm Kayıtlar\r\n        </Typography>\r\n    }else if (match.url === \"/new\") {\r\n        return <Typography style={{flex:1}} >\r\n            Yeni Kayıt\r\n        </Typography>\r\n    }else \r\n    return <h2> Hello </h2>\r\n}\r\n\r\n\r\n\r\nconst Navbar = () => {\r\n    const isSmall = useMediaQuery({ query: '(max-width: 900px)' })\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Grid item xs={12}>\r\n            <AppBar position=\"static\" className={isSmall ? classes.appbarSM : classes.appbarLG}>\r\n                <Toolbar >\r\n                <ConditionalTypo/>\r\n                    <IconButton color=\"inherit\" >\r\n                        <AccountCircleIcon />\r\n                    </IconButton>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { List, ListItem, ListItemIcon, ListItemText } from '@material-ui/core';\r\nimport { StarBorder } from '@material-ui/icons';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        minWidth: 5,\r\n        maxWidth: 800,\r\n    },\r\n    media: {\r\n        height: 0,\r\n        paddingTop: '56.25%', // 16:9\r\n    },\r\n    expand: {\r\n        transform: 'rotate(0deg)',\r\n        marginLeft: 'auto',\r\n        transition: theme.transitions.create('transform', {\r\n            duration: theme.transitions.duration.shortest,\r\n        }),\r\n    },\r\n    expandOpen: {\r\n        transform: 'rotate(180deg)',\r\n    },\r\n    cardContent: {\r\n        backgroundColor: \"blue\",\r\n    },\r\n    nested: {\r\n        paddingLeft: theme.spacing(4),\r\n    },\r\n\r\n}));\r\n\r\nexport default function Collapsible( props ) {\r\n    const classes = useStyles();\r\n    const [expanded, setExpanded] = React.useState(false);\r\n\r\n    const handleExpandClick = () => {\r\n        setExpanded(!expanded);\r\n    };\r\n\r\n    return (\r\n        <Card className={classes.root}>\r\n            <CardActions disableSpacing>\r\n                <IconButton\r\n                    className={clsx(classes.expand, {\r\n                        [classes.expandOpen]: expanded,\r\n                    })}\r\n                    onClick={handleExpandClick}\r\n                    aria-expanded={expanded}\r\n                    aria-label=\"show more\"\r\n                >\r\n                    <ExpandMoreIcon />\r\n                </IconButton>\r\n            </CardActions>\r\n            <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n                <List component=\"div\" disablePadding>\r\n                    <ListItem button className={classes.nested}>\r\n                        <ListItemIcon>\r\n                            <StarBorder />\r\n                        </ListItemIcon>\r\n                        {props.detay}\r\n                    </ListItem>\r\n                </List>\r\n            </Collapse>\r\n        </Card>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport { Grid } from '@material-ui/core';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport Collapsible from './Collapsible';\r\n\r\n\r\nimport { useObserver } from 'mobx-react';\r\nimport { useRecordsStore } from './recordsContext';\r\n\r\n\r\n\r\n// import ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n\r\n//const ExpandIcon = () => {\r\n//    return (\r\n//        <ExpandMoreIcon/>\r\n//    )\r\n//}\r\n\r\n\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n    if (b[orderBy] < a[orderBy]) {\r\n        return -1;\r\n    }\r\n    if (b[orderBy] > a[orderBy]) {\r\n        return 1;\r\n    }\r\n    return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n    return order === 'desc'\r\n        ? (a, b) => descendingComparator(a, b, orderBy)\r\n        : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n    const stabilizedThis = array.map((el, index) => [el, index]);\r\n    stabilizedThis.sort((a, b) => {\r\n        const order = comparator(a[0], b[0]);\r\n        if (order !== 0) return order;\r\n        return a[1] - b[1];\r\n    });\r\n    return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n    { id: 'model', numeric: false, disablePadding: true, label: 'Model' },\r\n    { id: 'tip', numeric: true, disablePadding: false, label: 'Kayıt Tipi' },\r\n    { id: 'hull', numeric: true, disablePadding: false, label: 'Hull Number' },\r\n    { id: 'tarih', numeric: true, disablePadding: false, label: 'Tarih' },\r\n    { id: 'lokasyon', numeric: true, disablePadding: false, label: 'Lokasyon' },\r\n    { id: 'sahipAdSoyad', numeric: true, disablePadding: false, label: 'Sahip Adı' },\r\n    { id: 'ozet', numeric: true, disablePadding: false, label: 'Kayıt Özeti' },\r\n    { id: 'detay', numeric: true, disablePadding: false, label: 'Detay' },\r\n\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n    const { classes, order, orderBy, onRequestSort } = props;\r\n    const createSortHandler = (property) => (event) => {\r\n        onRequestSort(event, property);\r\n    };\r\n\r\n    return (\r\n        <TableHead>\r\n            <TableRow>\r\n                <TableCell padding=\"checkbox\">\r\n\r\n                </TableCell>\r\n                {headCells.map((headCell) => (\r\n                    <TableCell\r\n                        key={headCell.id}\r\n                        align={headCell.numeric ? 'right' : 'left'}\r\n                        padding={headCell.disablePadding ? 'none' : 'normal'}\r\n                        sortDirection={orderBy === headCell.id ? order : false}\r\n                    >\r\n                        <TableSortLabel\r\n                            active={orderBy === headCell.id}\r\n                            direction={orderBy === headCell.id ? order : 'asc'}\r\n                            onClick={createSortHandler(headCell.id)}\r\n                        >\r\n                            {headCell.label}\r\n                            {orderBy === headCell.id ? (\r\n                                <span className={classes.visuallyHidden}>\r\n                                    {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                                </span>\r\n                            ) : null}\r\n                        </TableSortLabel>\r\n                    </TableCell>\r\n                ))}\r\n            </TableRow>\r\n        </TableHead>\r\n    );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    onRequestSort: PropTypes.func.isRequired,\r\n    order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n    orderBy: PropTypes.string.isRequired,\r\n    rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        marginTop: 10,\r\n    },\r\n    paper: {\r\n        width: '100%',\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    table: {\r\n        minWidth: 750,\r\n    },\r\n\r\n    visuallyHidden: {\r\n        border: 0,\r\n        clip: 'rect(0 0 0 0)',\r\n        height: 1,\r\n        margin: -1,\r\n        overflow: 'hidden',\r\n        padding: 0,\r\n        position: 'absolute',\r\n        top: 20,\r\n        width: 1,\r\n    },\r\n}));\r\n\r\nexport default function TableItem() {\r\n    const recordsStore = useRecordsStore();\r\n\r\n    const classes = useStyles();\r\n    const [order, setOrder] = React.useState('asc');\r\n    const [orderBy, setOrderBy] = React.useState('calories');\r\n    const [page, setPage] = React.useState(0);\r\n    const [dense, setDense] = React.useState(false);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n    const handleRequestSort = (event, property) => {\r\n        const isAsc = orderBy === property && order === 'asc';\r\n        setOrder(isAsc ? 'desc' : 'asc');\r\n        setOrderBy(property);\r\n    };\r\n\r\n\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    };\r\n\r\n    const handleChangeDense = (event) => {\r\n        setDense(event.target.checked);\r\n    };\r\n\r\n\r\n    // records array\r\n    const records = recordsStore.records;\r\n\r\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, 6 - page * rowsPerPage);\r\n    // there was records.length in place of 6 but didn't work.\r\n\r\n\r\n\r\n    // (function (){\r\n    //         console.log(records)\r\n\r\n    // })()\r\n\r\n\r\n    return useObserver(() => (\r\n        <Grid item xs={10}>\r\n            <div className={classes.root}>\r\n                <Paper className={classes.paper}>\r\n                    <TableContainer >\r\n                        <Table\r\n                            className={classes.table}\r\n                            aria-labelledby=\"tableTitle\"\r\n                            size={dense ? 'small' : 'medium'}\r\n                            aria-label=\"enhanced table\"\r\n                        >\r\n                            <EnhancedTableHead\r\n                                classes={classes}\r\n                                order={order}\r\n                                orderBy={orderBy}\r\n                                onRequestSort={handleRequestSort}\r\n                                rowCount={records.length}\r\n                            />\r\n                            <TableBody>\r\n                                {stableSort(records, getComparator(order, orderBy))\r\n                                    .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                                    .map((record, index) => {\r\n                                        const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                                        return (\r\n                                            <TableRow\r\n                                            >\r\n                                                <TableCell >\r\n                                                </TableCell>\r\n                                                <TableCell key={index} component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\r\n                                                    {record.model}\r\n                                                </TableCell>\r\n                                                <TableCell key={index} align=\"right\">{record.kayitTipi}</TableCell>\r\n                                                <TableCell key={index} align=\"right\">{record.hull}</TableCell>\r\n                                                <TableCell key={index} align=\"right\">{record.tarih}</TableCell>\r\n                                                <TableCell key={index} align=\"right\">{record.lokasyon}</TableCell>\r\n                                                <TableCell key={index} align=\"right\">{record.sahipAd + \" \" + record.sahipSoyad} </TableCell>\r\n                                                <TableCell key={index} align=\"right\">{record.ozet}</TableCell>\r\n                                                <TableCell key={index} align=\"right\">\r\n                                                    <Collapsible detay={record.detay} />\r\n                                                </TableCell>\r\n                                            </TableRow>\r\n                                        );\r\n                                    })}\r\n                                {emptyRows > 0 && (\r\n                                    <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\r\n                                        <TableCell colSpan={6} />\r\n                                    </TableRow>\r\n                                )}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                    <TablePagination\r\n                        rowsPerPageOptions={[5, 10, 25]}\r\n                        component=\"div\"\r\n                        count={records.length}\r\n                        rowsPerPage={rowsPerPage}\r\n                        page={page}\r\n                        onPageChange={handleChangePage}\r\n                        onRowsPerPageChange={handleChangeRowsPerPage}\r\n                    />\r\n                </Paper>\r\n                <FormControlLabel\r\n                    control={<Switch checked={dense} onChange={handleChangeDense} />}\r\n                    label=\"Dense padding\"\r\n                />\r\n            </div>\r\n        </Grid>\r\n    ))\r\n\r\n\r\n\r\n}\r\n","import React from 'react';\nimport { Grid } from '@material-ui/core';\nimport Navbar from './Navbar';\nimport TableItem from './TableItem';\n\nfunction ListRequests() {\n  return (\n        <>\n        <Navbar />\n        <Grid item xs={1}></Grid>\n         <TableItem />\n        <Grid item xs={1}></Grid>\n        </>\n  );\n}\n\nexport default ListRequests;\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Grid, Paper, Typography } from '@material-ui/core';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { Fab } from '@material-ui/core';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport {\r\n    DatePicker,\r\n    MuiPickersUtilsProvider,\r\n} from '@material-ui/pickers';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\n\r\nimport { useRecordsStore } from './recordsContext';\r\nimport moment from 'moment';\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles(() => ({\r\n\r\n    formControl: {\r\n        display: \"inline\",\r\n    },\r\n    formGroup: {\r\n        marginTop: 30,\r\n    },\r\n    paper: {\r\n        marginTop: 30,\r\n        marginBottom: 20,\r\n        marginLeft: 10,\r\n        paddingBottom: 10,\r\n        paddingLeft: 10,\r\n    },\r\n    selector: {\r\n        marginTop: 10,\r\n    },\r\n    datePicker: {\r\n        marginTop: 16,\r\n        marginLeft: 15,\r\n    },\r\n    textField: {\r\n        marginRight: 10,\r\n    }\r\n}));\r\n\r\nconst RequestForm = () => {\r\n    const recordsStore = useRecordsStore();\r\n\r\n    const classes = useStyles();\r\n    const [model, setModel] = React.useState(\"\");\r\n    const [yil, setYil] = React.useState(new Date());\r\n    const [durum, setDurum] = React.useState(\"\");\r\n    const [lokasyon, setLokasyon] = React.useState(\"\");\r\n    const [hull, setHull] = React.useState(\"\");\r\n\r\n    const [sahipAd, setSahipAd] = React.useState(\"\");\r\n    const [sahipSoyad, setSahipSoyad] = React.useState(\"\");\r\n    const [sahipEmail, setSahipEmail] = React.useState(\"\");\r\n    const [sahipTel, setSahipTel] = React.useState(0);\r\n\r\n    const [kaydedenAd, setKaydedenAd] = React.useState(\"\");\r\n    const [kaydedenSoyad, setKaydedenSoyad] = React.useState(\"\");\r\n    const [kaydedenEmail, setKaydedenEmail] = React.useState(\"\");\r\n    const [kaydedenTel, setKaydedenTel] = React.useState(0);\r\n\r\n\r\n    const [kayitTipi, setKayitTipi] = React.useState(\"\");\r\n    //   const [tarih, setTarih] = React.useState(new Date());\r\n    const [detay, setDetay] = React.useState(\"\");\r\n    const [ozet, setOzet] = React.useState(\"\");\r\n\r\n    moment.locale(\"tr\")\r\n    const tarih = moment().format('LLLL')\r\n\r\n\r\n    return (\r\n        <form onSubmit={(e) => {\r\n            e.preventDefault()\r\n            recordsStore.addRecord(model, yil, durum, hull, lokasyon, sahipAd, sahipSoyad, sahipEmail, sahipTel,\r\n                kaydedenAd, kaydedenSoyad, kaydedenEmail, kaydedenTel, kayitTipi, tarih, detay, ozet)\r\n            setModel(\"\")\r\n            setDurum(\"\")\r\n            setHull(\"\")\r\n            setLokasyon(\"\")\r\n            setSahipAd(\"\")\r\n            setSahipSoyad(\"\")\r\n            setSahipEmail(\"\")\r\n            setSahipTel(0)\r\n            setKaydedenAd(\"\")\r\n            setKaydedenSoyad(\"\")\r\n            setKaydedenEmail(\"\")\r\n            setKaydedenTel(0)\r\n            setKayitTipi(\"\")\r\n            setOzet(\"\")\r\n            setDetay(\"\")\r\n        }}>\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                <Grid container direction=\"row\">\r\n                    <Grid item xs={12}>\r\n                        <Paper className={classes.paper}>\r\n                            <Typography>\r\n                                Tekne Bilgileri\r\n                            </Typography>\r\n                            <Divider />\r\n                            <FormControl className={classes.formControl} >\r\n                                <div className={classes.selector}>\r\n                                    <InputLabel >Model</InputLabel>\r\n                                    <Select onClick={(e) => { setModel(e.target.value) }} style={{ minWidth: 200 }}  >\r\n                                        <MenuItem value={\"320 GTO\"}>320 GTO</MenuItem>\r\n                                        <MenuItem value={\"320 GTR\"}>320 GTR</MenuItem>\r\n                                    </Select>\r\n                                </div>\r\n                                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                    <DatePicker\r\n                                        views={[\"year\"]}\r\n                                        label=\"Yıl\"\r\n                                        value={yil}\r\n                                        onChange={setYil}\r\n                                    />\r\n                                </MuiPickersUtilsProvider>\r\n                                <TextField\r\n                                    label=\"Durum\"\r\n                                    placeholder=\"Teknenin Durumu\"\r\n                                    className={classes.textField}\r\n                                    name=\"durum\"\r\n                                    id=\"durum\"\r\n                                    value={durum}\r\n                                    onChange={(e) => { setDurum(e.target.value) }}\r\n                                />\r\n                                <TextField\r\n                                    label=\"Hull\"\r\n                                    placeholder=\"Hull Number\"\r\n                                    className={classes.textField}\r\n                                    name=\"hull\"\r\n                                    value={hull}\r\n                                    onChange={(e) => { setHull(e.target.value) }}\r\n                                />\r\n                                <TextField\r\n                                    label=\"Lokasyon\"\r\n                                    placeholder=\"Tekne Nerede\"\r\n                                    className={classes.textField}\r\n                                    name=\"lokasyon\"\r\n                                    value={lokasyon}\r\n                                    onChange={(e) => { setLokasyon(e.target.value) }}\r\n                                />\r\n                            </FormControl>\r\n                        </Paper>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Paper className={classes.paper}>\r\n                            <Typography>\r\n                                Tekne Sahibi\r\n                            </Typography>\r\n                            <Divider />\r\n                            <FormControl className={classes.formControl} >\r\n                                <TextField\r\n                                    label=\"Ad\"\r\n                                    placeholder=\"Adınızı Girin\"\r\n                                    className={classes.textField}\r\n                                    name=\"sahipAdi\"\r\n                                    value={sahipAd}\r\n                                    onChange={(e) => { setSahipAd(e.target.value) }}\r\n                                />\r\n                                <TextField\r\n                                    label=\"Soyad\"\r\n                                    placeholder=\"Soyadınızı Girin\"\r\n                                    className={classes.textField}\r\n                                    name=\"sahipSoyadi\"\r\n                                    value={sahipSoyad}\r\n                                    onChange={(e) => { setSahipSoyad(e.target.value) }}\r\n                                />\r\n                                <TextField\r\n                                    label=\"Email\"\r\n                                    placeholder=\"Email Adresi\"\r\n                                    className={classes.textField}\r\n                                    name=\"sahipEmail\"\r\n                                    value={sahipEmail}\r\n                                    onChange={(e) => { setSahipEmail(e.target.value) }}\r\n                                />\r\n                                <TextField\r\n                                    label=\"Telefon\"\r\n                                    placeholder=\"Telefon Numarası\"\r\n                                    className={classes.textField}\r\n                                    name=\"sahipTel\"\r\n                                    value={sahipTel}\r\n                                    onChange={(e) => { setSahipTel(e.target.value) }}\r\n                                />\r\n                            </FormControl>\r\n                        </Paper>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Paper className={classes.paper}>\r\n                            <Typography>\r\n                                Kayıt Oluşturan Kişi\r\n                            </Typography>\r\n                            <Divider />\r\n                            <FormControl className={classes.formControl}>\r\n                                <TextField\r\n                                    label=\"Ad\"\r\n                                    placeholder=\"Adınızı Girin\"\r\n                                    className={classes.textField}\r\n                                    name=\"kaydedenAd\"\r\n                                    value={kaydedenAd}\r\n                                    onChange={(e) => { setKaydedenAd(e.target.value) }}\r\n                                />\r\n                                <TextField\r\n                                    label=\"Soyad\"\r\n                                    placeholder=\"Soyadınızı Girin\"\r\n                                    className={classes.textField}\r\n                                    name=\"kaydedenSoyadi\"\r\n                                    value={kaydedenSoyad}\r\n                                    onChange={(e) => { setKaydedenSoyad(e.target.value) }}\r\n\r\n                                />\r\n                                <TextField\r\n                                    label=\"Email\"\r\n                                    placeholder=\"Email Adresi\"\r\n                                    className={classes.textField}\r\n                                    name=\"kaydedenEmail\"\r\n                                    value={kaydedenEmail}\r\n                                    onChange={(e) => { setKaydedenEmail(e.target.value) }}\r\n                                />\r\n                                <TextField\r\n                                    label=\"Telefon\"\r\n                                    placeholder=\"Telefon Numarası\"\r\n                                    className={classes.textField}\r\n                                    name=\"kaydedenTel\"\r\n                                    value={kaydedenTel}\r\n                                    onChange={(e) => { setKaydedenTel(e.target.value) }}\r\n                                />\r\n                            </FormControl>\r\n                        </Paper>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Paper className={classes.paper}>\r\n                            <Typography>\r\n                                Kayıt Bilgileri\r\n                            </Typography>\r\n                            <Divider />\r\n                            <FormControl className={classes.formControl} >\r\n                                <div className={classes.selector}>\r\n                                    <InputLabel >Kayıt Tipi</InputLabel>\r\n                                    <Select\r\n                                        name=\"kayitTipi\"\r\n                                        value={kayitTipi}\r\n                                        style={{ minWidth: 200 }}\r\n                                        onChange={(e) => { setKayitTipi(e.target.value) }}\r\n                                    >\r\n                                        <MenuItem value={\"Servis\"}>Servis - Onarım</MenuItem>\r\n                                        <MenuItem value={\"Özel\"}>Özel Talep</MenuItem>\r\n                                    </Select>\r\n\r\n                                </div>\r\n                                <TextField\r\n                                    label=\"Kayıt Özeti\"\r\n                                    className={classes.textField}\r\n                                    name=\"ozet\"\r\n                                    value={ozet}\r\n                                    onChange={(e) => { setOzet(e.target.value) }}\r\n                                />\r\n                                <TextField\r\n                                    label=\"Talep Detayı\"\r\n                                    className={classes.textField}\r\n                                    name=\"detay\"\r\n                                    value={detay}\r\n                                    onChange={(e) => { setDetay(e.target.value) }}\r\n                                />\r\n                            </FormControl>\r\n                        </Paper>\r\n                    </Grid>\r\n                    <button type={\"submit\"} style={{ border: \"none\" }}>\r\n                        <Fab\r\n                            size=\"small\"\r\n                            color=\"primary\"\r\n                        >\r\n                            <SaveIcon />\r\n                        </Fab>\r\n                    </button>\r\n                </Grid>\r\n            </MuiPickersUtilsProvider>\r\n        </form>\r\n    );\r\n}\r\n\r\n\r\nexport default RequestForm;","import React from 'react';\r\nimport RequestForm from './RequestForm';\r\nimport { Grid } from '@material-ui/core';\r\nimport Navbar from './Navbar';\r\n\r\n\r\n\r\n\r\n\r\nconst NewRequest = () => {\r\n\r\n    return (\r\n          <>\r\n          <Navbar />\r\n          <Grid item xs={1}></Grid>\r\n           <RequestForm />\r\n          <Grid item xs={1}></Grid>\r\n          </>\r\n    )\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport default NewRequest;","export default __webpack_public_path__ + \"static/media/logos.afa9fb95.svg\";","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport { Grid } from '@material-ui/core';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport { Link } from 'react-router-dom';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport FilterNoneIcon from '@material-ui/icons/FilterNone';\r\nimport LibraryAddIcon from '@material-ui/icons/LibraryAdd';\r\nimport { useMediaQuery } from 'react-responsive'\r\n\r\n\r\nimport logos from './logos.svg';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        minWidth: 100,\r\n        maxWidth: 360,\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n    navItem: {\r\n        fontSize: 32,\r\n        color: \"black\",\r\n    },\r\n    link: {\r\n        textDecoration: \"none\",\r\n    },\r\n    Logos: {\r\n        maxWidth:200,\r\n        minWidth:50,\r\n        height:50,\r\n    }\r\n\r\n}));\r\n\r\n\r\nconst Drawer = () => {\r\n    const isLargeScreen = useMediaQuery({ query: '(min-width: 800px)' })\r\n\r\n    return (\r\n        <Grid item container xs={2} direction=\"column\" >\r\n\r\n            {isLargeScreen ? \r\n            <DrawerLargeScreen />\r\n            :\r\n            <DrawerSmallScreen />\r\n            }\r\n        </Grid>\r\n\r\n    )\r\n\r\n}\r\n\r\n\r\nconst DrawerLargeScreen = () => {\r\n    const classes = useStyles();\r\n    return (\r\n        <div>\r\n            <List component=\"nav\" aria-label=\"main mailbox folders\" >\r\n                <ListItem >\r\n                    <ListItemIcon className={classes.Logos}>\r\n                        <img src={logos} style={{width:\"100%\", height:\"100%\"}} alt=\"logos\"></img>\r\n                    </ListItemIcon>\r\n                </ListItem>\r\n                <Divider />\r\n                <ListItem>\r\n                    <Link to=\"/\" className={classes.link} >\r\n                        <ListItemIcon >\r\n                            <FilterNoneIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary=\"Tüm Kayıtlar\" className={classes.navItem} />\r\n                    </Link>\r\n                </ListItem>\r\n            </List>\r\n            <ListItem>\r\n                <Link to=\"/new\" className={classes.link} >\r\n                    <ListItemIcon>\r\n                        <LibraryAddIcon style={{ alignItems: \"left\" }} />\r\n                    </ListItemIcon>\r\n                    <ListItemText primary=\"Yeni Kayıt\" className={classes.navItem} />\r\n                </Link>\r\n            </ListItem>\r\n            <Divider />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst DrawerSmallScreen = () => {\r\n    const classes = useStyles();\r\n    return (\r\n        <div>\r\n        <List component=\"nav\" aria-label=\"main mailbox folders\" >\r\n            <ListItem >\r\n                <ListItemIcon className={classes.Logos}>\r\n                    <img src={logos} alt=\"logos\" style={{ height:\"100%\",width:\"100%\" }}></img>\r\n                </ListItemIcon>\r\n            </ListItem>\r\n            <Divider />\r\n            <ListItem>\r\n                <Link to=\"/\" className={classes.link} >\r\n                    <ListItemIcon >\r\n                        <FilterNoneIcon />\r\n                    </ListItemIcon>\r\n                </Link>\r\n            </ListItem>\r\n        </List>\r\n        <ListItem>\r\n            <Link to=\"/new\" className={classes.link} >\r\n                <ListItemIcon>\r\n                    <LibraryAddIcon style={{ alignItems: \"left\" }} />\r\n                </ListItemIcon>\r\n            </Link>\r\n        </ListItem>\r\n        <Divider />\r\n    </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default Drawer;\r\n\r\n\r\n\r\n\r\n//  <>\r\n// <Grid item>\r\n// <p>This is drawer\r\n// </p>\r\n// </Grid>\r\n\r\n// <Grid item>\r\n// <p>This is drawer\r\n// </p>\r\n// </Grid>\r\n// </> \r\n","import { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\nimport ListRequests from \"./ListRequests\";\r\nimport NewRequest from \"./NewRequest\";\r\nimport { Grid } from '@material-ui/core';\r\nimport Drawer from './Drawer';\r\n\r\nconst Routes = () => {\r\n  return (\r\n   \r\n    <BrowserRouter>\r\n      <Grid container >\r\n        <Drawer />\r\n        <Grid item container xs={10} direction=\"row\">\r\n          <Switch>\r\n            <Route exact path=\"/\" component={ListRequests} />\r\n            <Route exact path=\"/new\" component={NewRequest} />\r\n          </Switch>\r\n        </Grid>\r\n      </Grid>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport default Routes;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { RecordsProvider } from './recordsContext';\nimport Routes from './Routes';\n\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <RecordsProvider>\n    <Routes />\n    </RecordsProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}